
<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <title>XAI 聊天機器人</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        #apiKeyModal {
            display: block;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: white;
            margin: 15% auto;
            padding: 20px;
            width: 80%;
            max-width: 500px;
            border-radius: 5px;
        }

        #chatContainer {
            display: none;
            height: 80vh;
            display: flex;
            flex-direction: column;
        }

        #chatHistory {
            flex-grow: 1;
            overflow-y: auto;
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
        }

        .message {
            margin: 10px 0;
            padding: 10px;
            border-radius: 5px;
        }

        .user-message {
            background-color: #e3f2fd;
            margin-left: 20%;
        }

        .bot-message {
            background-color: #f5f5f5;
            margin-right: 20%;
        }

        .code-block {
            background-color: #f8f9fa;
            padding: 10px;
            border-radius: 4px;
            position: relative;
        }

        .copy-button {
            position: absolute;
            right: 5px;
            top: 5px;
            padding: 5px;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 3px;
            cursor: pointer;
        }

        #inputContainer {
            display: flex;
            gap: 10px;
        }

        #userInput {
            flex-grow: 1;
            padding: 10px;
        }
    </style>
</head>
<body>
    <div id="apiKeyModal">
        <div class="modal-content">
            <h2>請輸入您的 API Key</h2>
            <input type="password" id="apiKeyInput" placeholder="輸入 API Key" style="width: 100%; padding: 10px; margin: 10px 0;">
            <button onclick="saveApiKey()">確認</button>
        </div>
    </div>

    <div id="chatContainer">
        <div id="chatHistory"></div>
        <div id="inputContainer">
            <textarea id="userInput" placeholder="輸入訊息..." rows="3"></textarea>
            <button onclick="sendMessage()">發送</button>
        </div>
    </div>

    <script>
        let apiKey = '';
        let messageHistory = [];

        function saveApiKey() {
            apiKey = document.getElementById('apiKeyInput').value;
            if (apiKey) {
                document.getElementById('apiKeyModal').style.display = 'none';
                document.getElementById('chatContainer').style.display = 'flex';
            }
        }

        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(() => {
                alert('已複製到剪貼板！');
            });
        }

        function formatMessage(content) {
            const codeBlockRegex = /```([\s\S]*?)```/g;
            return content.replace(codeBlockRegex, (match, code) => {
                return `<div class="code-block">
                    <button class="copy-button" onclick="copyToClipboard(\`${code.trim()}\`)">複製</button>
                    <pre><code>${code.trim()}</code></pre>
                </div>`;
            });
        }

        async function sendMessage() {
            const userInput = document.getElementById('userInput');
            const message = userInput.value.trim();
            if (!message) return;

            // 添加用戶訊息到聊天歷史
            const chatHistory = document.getElementById('chatHistory');
            chatHistory.innerHTML += `<div class="message user-message">${message}</div>`;
            
            messageHistory.push({ role: "user", content: message });
            userInput.value = '';

            try {
                const response = await fetch('https://api.x.ai/v1/chat/completions', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${apiKey}`
                    },
                    body: JSON.stringify({
                        model: "grok-beta",
                        messages: messageHistory
                    })
                });

                const data = await response.json();
                const botResponse = data.choices[0].message.content;
                messageHistory.push({ role: "assistant", content: botResponse });

                chatHistory.innerHTML += `<div class="message bot-message">${formatMessage(botResponse)}</div>`;
                chatHistory.scrollTop = chatHistory.scrollHeight;
            } catch (error) {
                console.error('Error:', error);
                chatHistory.innerHTML += `<div class="message bot-message">抱歉，發生錯誤：${error.message}</div>`;
            }
        }

        // 監聽 Enter 鍵發送訊息
        document.getElementById('userInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
            }
        });
    </script>
</body>
</html>

以上是聊天AI的範例程式碼
一樣需要請使用者輸入api key
我想要改成互動式算命，我們顯示「請問你想問什麼事：」跟隨一個文字匡與確定
按下確定之後代有儀式感的文字匡慢慢縮小，且確定按鈕慢慢地移動到中央，然後出現一些閃光
這時候我們把文字匡的內容傳訊息給xAI
我們的prompt:
這是一個生命導師，我們使用算命的形式來讓詢問問題的人得到正向的積極回答，但要帶有神秘的文字，
不能白話需要有所隱喻．
接收到文字之後，需要一個字一個字慢慢地顯示出來，某種儀式感．

